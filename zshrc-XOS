# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH="/Users/dyf/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="dpoggi"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#终端代理
# export ALL_PROXY=socks5://127.0.0.1:1080

# 添加rust
# source $HOME/.cargo/env

#将nodejs添加到环境变量
export NODE_HOME=/usr/local/node/
export PATH=$NODE_HOME/bin:$PATH

#添加wasm汇编工具
export PATH=$PATH:/home/Hammer/wabt/bin/

#将go环境添加到环境变量
export PATH=$PATH:/usr/local/go/bin

#/usr/local/bin
export PATH=$PATH:/usr/local/bin

#将nvm添加到环境变量
export NVM_DIR="$HOME/.nvm"

#将pwntools等工具添加到环境变量
export PATH=$PATH:/usr/local/bin

#theos
export THEOS=/usr/local/opt/theos
export PATH=$PATH:/usr/local/opt/theos/bin

# llvm
export PATH=$PATH:/usr/local/opt/llvm/bin/

# export LDFLAGS="-L/usr/local/opt/libffi/lib"
# export LDFLAGS="-L/usr/local/opt/llvm/lib"
# export CPPFLAGS="-I/usr/local/opt/llvm/include"

#capstone
export DYLD_LIBRARY_PATH=/usr/local/opt/capstone/lib/:$DYLD_LIBRARY_PATH

# qt
export PATH="/usr/local/opt/qt/bin:$PATH"

# pwn_docker
alias pwn="docker exec -it 47 /bin/zsh"

#nmap扫描主机
alias shit="nmap -O -A"

#查寻外网ip
alias myip="curl https://tool.lu/ip/"

#sucker
alias suck="wget -r -npH -k -c -nv"

#查询大文件
alias large="find / -size +100M"

#编辑zshrc
alias zshrc="vim ~/.zshrc"

#设置autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

#cmake rebuild
alias rebuild="cd .. && rm -r build && mkdir build && cd build"

#set desktop black
alias down="sh -c 'echo 0 >/sys/class/backlight/intel_backlight/brightness'"

#web_pass解密 
function webpass(){
    java -classpath "/Users/dyf/code/solo/USTB_HACK/result/Misc/" Cipher1 $1
}

#设置rtsp流读取
function fuckcam(){
    for line in $(cat $1)
    do
        ffplay  -rtsp_transport tcp -i $line &
        echo $line
    done
}

#校园网登录  
function login(){
    hdown
    curl -s -d "DDDDD=41824142&upass=Dyf12345&v6ip=&0MKKey=123456789" 202.204.48.66 > /dev/null
    ip=`myip | grep IP | cut -d " " -f 2`
    wlan0_intranet=`ifconfig | grep -A 2 wlan0 | grep "inet .*" -o | cut -d " " -f 2`
    wlan0_mac=`ifconfig | grep -A 2 wlan0 | grep "inet6 .*" -o | cut -d " " -f 2`
    eth0_intranet=`ifconfig | grep -A 2 eth0 | grep "inet .*" -o | cut -d " " -f 2`
    eth0_mac=`ifconfig | grep -A 2 eth0 | grep "inet6 .*" -o | cut -d " " -f 2`
    if [[ $ip != '' ]]
    then
        echo "Login success!"
        echo "Extranet ip: "$ip
        if [[ $wlan0_intranet =~ "." ]]
        then            
            echo 1
            echo "Intranet ip: "$wlan0_intranet
            echo "MAC : "$wlan0_mac
        elif [[ $eth0_intranet =~ "." ]]
        then
            echo "Intranet ip: "$eth0_intranet
            echo "MAC : "$eth0_mac
        fi
    fi
}

#更新MAC
function changeMac(){
    mac=$(setAddress)
    echo $mac
    ifconfig $1 down
    ifconfig $1 hw ether $mac
    ifconfig $1 up
}                                                                                                                              

function getSeed(){                                                                                                            
    ((seed=$(($RANDOM % 256))))                                                                                                 
    if [[ $seed < 16 ]]
    then                                                                                                                       
        seed=$(($seed + 16))
    fi                                                                                                                         
    return $seed                                                                                                               
}                                                                                                                              

function setAddress() {
    eth=''
    for ((i=0;i<6;i++))
    do
        getSeed                                                                                                                        
        ins=$?
        eth="$eth$(printf '%x' $ins):"
    done
    echo $eth | sed 's/.$//'
}

function fade() {
    changeMac "eth0"
    changeMac "wlan0"
}

function logInfo() {
    echo -e "\033[35m[+]$1\033[0m:\033[36m$2\033[0m"
}


#查看电池电量
function power() {
    capacity=$(cat /sys/class/power_supply/BAT1/capacity)
    logInfo "Power" $capacity
    echo -e "\033[5;31mLet's light up the world! :) \033[0m"
}

function hup() {
    export http_proxy="http://127.0.0.1:7890" 
    export HTTP_PROXY="http://127.0.0.1:7890" 
    export https_proxy="http://127.0.0.1:7890" 
    export HTTPS_PROXY="http://127.0.0.1:7890"
}

function hdown() {
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset http_proxy 
    unset https_proxy
}
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.cloud.tencent.com/homebrew-bottles
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

function lldbup() {
    command script import /Users/dyf/code/Hammar/debug/voltron/voltron/entry.py
}

# pip zsh completion start
function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip3
# pip zsh completion end

export PYENV_ROOT=/usr/local/var/pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

export PATH="/Users/dyf/Library/Python/3.9/bin:$PATH"
# CLANG_HOME="/Users/dyf/code/misc/llvm-project/release"
CLANG_HOME="/usr/local/opt/llvm/"
